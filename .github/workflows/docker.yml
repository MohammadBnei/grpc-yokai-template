name: Build, Test and Deploy

on:
  pull_request:
  push:
    tags:
      - "*"

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/vos-template
  PLATFORMS: ${{ github.event_name == 'push' && 'linux/amd64, linux/arm64' || 'linux/amd64' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v6.1.1
            
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Build
        run: make build

  tidy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Tidy
        run: make tidy

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: personal
          POSTGRES_PASSWORD: words
          POSTGRES_DB: personal-words
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Test
        run: |
          make test-ci
        env:
          APP_ENV: test
          APP_DEBUG: true
          PORT: 4000
          POSTGRES_USER: personal
          POSTGRES_PASSWORD: words
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DATABASE: personal-words

  build-push:
    runs-on: ubuntu-latest
    needs: 
      - test 
      - build
      - lint
      - tidy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: package.json info
        id: info
        uses: jaywcjlove/github-action-package@v2.0.0

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ env.IMAGE_NAME }}:${{ steps.info.outputs.version }}, ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:latest,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: 'main'

      - name: package.json info
        id: info
        uses: jaywcjlove/github-action-package@v2.0.0

      - uses: imranismail/setup-kustomize@v2

      - name: Update kustomize image version
        run: |
          kustomize edit set image ${{ env.IMAGE_NAME }}:${{ steps.info.outputs.version }}

      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: git push
        run: |
          git add .
          git commit -m "Chore: update kustomize image version to ${{ steps.info.outputs.version }}"
          git push