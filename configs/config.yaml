app:
  name: grpc-app
  version: 0.1.0
modules:
  core:
    server:
      address: ":8082"
      dashboard:
        enabled: true
        overview:
          app_env: true
          app_debug: true
          app_version: true
          log_level: true
          log_output: true
          trace_sampler: true
          trace_processor: true
      metrics:
        expose: true
        collect:
          enabled: true
        normalize:
          request_path: true
          response_status: true
      healthcheck:
        startup:
          expose: true
        readiness:
          expose: true
        liveness:
          expose: true
      debug:
        config:
          expose: true
        pprof:
          expose: true
        routes:
          expose: true
        stats:
          expose: true
        build:
          expose: true
        modules:
          expose: true
  grpc:
    server:
      address: ${PORT:50051}
      reflection:
        enabled: true
      trace:
        enabled: true
      healthcheck:
        enabled: true
      metrics:
        collect:
          enabled: true
  http:
    server:
      address: ":8080" # http server listener address (default :8080)
      errors:
        obfuscate: false # to obfuscate error messages on the http server responses
        stack: false # to add error stack trace to error response of the http server
      log:
        headers: # to log incoming request headers on the http server
          x-foo: foo # to log for example the header x-foo in the log field foo
          x-bar: bar
        exclude: # to exclude specific routes from logging
          - /foo
          - /bar
        level_from_response: true # to use response status code for log level (ex: 500=error)
      trace:
        enabled: true # to trace incoming request headers on the http server
        exclude: # to exclude specific routes from tracing
          - /foo
          - /bar
      metrics:
        collect:
          enabled: true # to collect http server metrics
          namespace: foo # http server metrics namespace (empty by default)
          subsystem: bar # http server metrics subsystem (empty by default)
        buckets: 0.1, 1, 10 # to override default request duration buckets
        normalize:
          request_path: true # to normalize http request path, disabled by default
          response_status: true # to normalize http response status code (2xx, 3xx, ...), disabled by default
      templates:
        enabled: false # disabled by default
        path: templates/*.html
  log:
    level: info
    output: stdout
  trace:
    processor:
      type: noop
  orm:
    driver: postgres # driver to use
    dsn: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} dbname=${POSTGRES_DATABASE} sslmode=disable"
    config:
      dry_run: false # disabled by default
      skip_default_transaction: false # disabled by default
      full_save_associations: false # disabled by default
      prepare_stmt: false # disabled by default
      disable_automatic_ping: false # disabled by default
      disable_foreign_key_constraint_when_migrating: false # disabled by default
      ignore_relationships_when_migrating: false # disabled by default
      disable_nested_transaction: false # disabled by default
      allow_global_update: false # disabled by default
      query_fields: false # disabled by default
      translate_error: false # disabled by default
    log:
      enabled: true # to log SQL queries, disabled by default
      level: info # with a minimal level
      values: false # by adding or not clear SQL queries parameters values in logs, disabled by default
    trace:
      enabled: true # to trace SQL queries, disabled by default
      values: true # by adding or not clear SQL queries parameters values in trace spans, disabled by default
